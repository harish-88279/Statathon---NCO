{"ast":null,"code":"var _jsxFileName = \"D:\\\\Placement\\\\Projects\\\\Statathon\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Form, Card, Button, Alert } from 'react-bootstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [divisions, setDivisions] = useState([]);\n  const [subdivisions, setSubdivisions] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [families, setFamilies] = useState([]);\n  const [occupations, setOccupations] = useState([]);\n  const [selectedDivision, setSelectedDivision] = useState('');\n  const [selectedSubdivision, setSelectedSubdivision] = useState('');\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [selectedFamily, setSelectedFamily] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n  const API_URL = 'http://localhost:5000/api';\n\n  // Import data on first load\n  useEffect(() => {\n    const importData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.post(`${API_URL}/import-data`);\n        setImportStatus({\n          type: 'success',\n          message: response.data.message\n        });\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          // Data already imported, this is fine\n          setImportStatus({\n            type: 'info',\n            message: 'Using existing database data'\n          });\n        } else {\n          setImportStatus({\n            type: 'danger',\n            message: 'Failed to import data'\n          });\n          console.error('Error importing data:', error);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    importData();\n  }, []);\n\n  // Load divisions on component mount\n  useEffect(() => {\n    const fetchDivisions = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API_URL}/divisions`);\n        setDivisions(response.data);\n      } catch (error) {\n        setError('Failed to fetch divisions');\n        console.error('Error fetching divisions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDivisions();\n  }, []);\n\n  // Load subdivisions when division changes\n  useEffect(() => {\n    if (selectedDivision) {\n      const fetchSubdivisions = async () => {\n        try {\n          setLoading(true);\n          const response = await axios.get(`${API_URL}/subdivisions/${selectedDivision}`);\n          setSubdivisions(response.data);\n          setSelectedSubdivision('');\n          setGroups([]);\n          setFamilies([]);\n          setOccupations([]);\n        } catch (error) {\n          setError('Failed to fetch subdivisions');\n          console.error('Error fetching subdivisions:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchSubdivisions();\n    }\n  }, [selectedDivision]);\n\n  // Load groups when subdivision changes\n  useEffect(() => {\n    if (selectedSubdivision) {\n      const fetchGroups = async () => {\n        try {\n          setLoading(true);\n          const response = await axios.get(`${API_URL}/groups/${selectedSubdivision}`);\n          setGroups(response.data);\n          setSelectedGroup('');\n          setFamilies([]);\n          setOccupations([]);\n        } catch (error) {\n          setError('Failed to fetch groups');\n          console.error('Error fetching groups:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchGroups();\n    }\n  }, [selectedSubdivision]);\n\n  // Load families when group changes\n  useEffect(() => {\n    if (selectedGroup) {\n      const fetchFamilies = async () => {\n        try {\n          setLoading(true);\n          const response = await axios.get(`${API_URL}/families/${selectedGroup}`);\n          setFamilies(response.data);\n          setSelectedFamily('');\n          setOccupations([]);\n        } catch (error) {\n          setError('Failed to fetch families');\n          console.error('Error fetching families:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchFamilies();\n    }\n  }, [selectedGroup]);\n\n  // Load occupations when family changes\n  useEffect(() => {\n    if (selectedFamily) {\n      const fetchOccupations = async () => {\n        try {\n          setLoading(true);\n          const response = await axios.get(`${API_URL}/occupations`);\n          const filteredOccupations = response.data.filter(item => item.Family_Title === selectedFamily).flatMap(item => item.Occupations);\n          setOccupations(filteredOccupations);\n        } catch (error) {\n          setError('Failed to fetch occupations');\n          console.error('Error fetching occupations:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchOccupations();\n    }\n  }, [selectedFamily]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"shadow-sm mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"bg-primary text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Government Occupational Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [importStatus && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: importStatus.type,\n          dismissible: true,\n          children: importStatus.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          dismissible: true,\n          onClose: () => setError(null),\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Division\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: selectedDivision,\n                onChange: e => setSelectedDivision(e.target.value),\n                disabled: loading || divisions.length === 0,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Division\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), divisions.map((division, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: division,\n                  children: division\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Sub-Division\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: selectedSubdivision,\n                onChange: e => setSelectedSubdivision(e.target.value),\n                disabled: loading || !selectedDivision || subdivisions.length === 0,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Sub-Division\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), subdivisions.map((subdivision, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: subdivision,\n                  children: subdivision\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: selectedGroup,\n                onChange: e => setSelectedGroup(e.target.value),\n                disabled: loading || !selectedSubdivision || groups.length === 0,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: group,\n                  children: group\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Family\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: selectedFamily,\n                onChange: e => setSelectedFamily(e.target.value),\n                disabled: loading || !selectedGroup || families.length === 0,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Family\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), families.map((family, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: family,\n                  children: family\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), occupations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Occupations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"thead-dark\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"NCO 2004 Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: occupations.map((occupation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: occupation.Code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: occupation.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: occupation.NCO_2004_Code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-center text-muted\",\n        children: [\"Government Occupational Database \\xA9 \", new Date().getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"syE9YXAGNxjSe3kvgUwDqGJ6Wn4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Row","Col","Form","Card","Button","Alert","jsxDEV","_jsxDEV","App","_s","divisions","setDivisions","subdivisions","setSubdivisions","groups","setGroups","families","setFamilies","occupations","setOccupations","selectedDivision","setSelectedDivision","selectedSubdivision","setSelectedSubdivision","selectedGroup","setSelectedGroup","selectedFamily","setSelectedFamily","loading","setLoading","error","setError","importStatus","setImportStatus","API_URL","importData","response","post","type","message","data","status","console","fetchDivisions","get","fetchSubdivisions","fetchGroups","fetchFamilies","fetchOccupations","filteredOccupations","filter","item","Family_Title","flatMap","Occupations","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","dismissible","onClose","Group","Label","Control","as","value","onChange","e","target","disabled","length","map","division","index","subdivision","group","family","occupation","Code","Title","NCO_2004_Code","Footer","Date","getFullYear","_c","$RefreshReg$"],"sources":["D:/Placement/Projects/Statathon/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Form, Card, Button, Alert } from 'react-bootstrap';\nimport './App.css';\n\nfunction App() {\n  const [divisions, setDivisions] = useState([]);\n  const [subdivisions, setSubdivisions] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [families, setFamilies] = useState([]);\n  const [occupations, setOccupations] = useState([]);\n  \n  const [selectedDivision, setSelectedDivision] = useState('');\n  const [selectedSubdivision, setSelectedSubdivision] = useState('');\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [selectedFamily, setSelectedFamily] = useState('');\n  \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n\n  const API_URL = 'http://localhost:5000/api';\n\n  // Import data on first load\n  useEffect(() => {\n    const importData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.post(`${API_URL}/import-data`);\n        setImportStatus({ type: 'success', message: response.data.message });\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          // Data already imported, this is fine\n          setImportStatus({ type: 'info', message: 'Using existing database data' });\n        } else {\n          setImportStatus({ type: 'danger', message: 'Failed to import data' });\n          console.error('Error importing data:', error);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    importData();\n  }, []);\n\n  // Load divisions on component mount\n  useEffect(() => {\n    const fetchDivisions = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API_URL}/divisions`);\n        setDivisions(response.data);\n      } catch (error) {\n        setError('Failed to fetch divisions');\n        console.error('Error fetching divisions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDivisions();\n  }, []);\n\n  // Load subdivisions when division changes\n  useEffect(() => {\n    if (selectedDivision) {\n      const fetchSubdivisions = async () => {\n        try {\n          setLoading(true);\n          const response = await axios.get(`${API_URL}/subdivisions/${selectedDivision}`);\n          setSubdivisions(response.data);\n          setSelectedSubdivision('');\n          setGroups([]);\n          setFamilies([]);\n          setOccupations([]);\n        } catch (error) {\n          setError('Failed to fetch subdivisions');\n          console.error('Error fetching subdivisions:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchSubdivisions();\n    }\n  }, [selectedDivision]);\n\n  // Load groups when subdivision changes\n  useEffect(() => {\n    if (selectedSubdivision) {\n      const fetchGroups = async () => {\n        try {\n          setLoading(true);\n          const response = await axios.get(`${API_URL}/groups/${selectedSubdivision}`);\n          setGroups(response.data);\n          setSelectedGroup('');\n          setFamilies([]);\n          setOccupations([]);\n        } catch (error) {\n          setError('Failed to fetch groups');\n          console.error('Error fetching groups:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchGroups();\n    }\n  }, [selectedSubdivision]);\n\n  // Load families when group changes\n  useEffect(() => {\n    if (selectedGroup) {\n      const fetchFamilies = async () => {\n        try {\n          setLoading(true);\n          const response = await axios.get(`${API_URL}/families/${selectedGroup}`);\n          setFamilies(response.data);\n          setSelectedFamily('');\n          setOccupations([]);\n        } catch (error) {\n          setError('Failed to fetch families');\n          console.error('Error fetching families:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchFamilies();\n    }\n  }, [selectedGroup]);\n\n  // Load occupations when family changes\n  useEffect(() => {\n    if (selectedFamily) {\n      const fetchOccupations = async () => {\n        try {\n          setLoading(true);\n          const response = await axios.get(`${API_URL}/occupations`);\n          const filteredOccupations = response.data\n            .filter(item => item.Family_Title === selectedFamily)\n            .flatMap(item => item.Occupations);\n          setOccupations(filteredOccupations);\n        } catch (error) {\n          setError('Failed to fetch occupations');\n          console.error('Error fetching occupations:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchOccupations();\n    }\n  }, [selectedFamily]);\n\n  return (\n    <Container className=\"py-5\">\n      <Card className=\"shadow-sm mb-5\">\n        <Card.Header className=\"bg-primary text-white\">\n          <h1 className=\"text-center\">Government Occupational Database</h1>\n        </Card.Header>\n        <Card.Body>\n          {importStatus && (\n            <Alert variant={importStatus.type} dismissible>\n              {importStatus.message}\n            </Alert>\n          )}\n          \n          {error && (\n            <Alert variant=\"danger\" dismissible onClose={() => setError(null)}>\n              {error}\n            </Alert>\n          )}\n\n          <Row className=\"mb-4\">\n            <Col>\n              <Form.Group>\n                <Form.Label>Division</Form.Label>\n                <Form.Control \n                  as=\"select\" \n                  value={selectedDivision}\n                  onChange={(e) => setSelectedDivision(e.target.value)}\n                  disabled={loading || divisions.length === 0}\n                >\n                  <option value=\"\">Select Division</option>\n                  {divisions.map((division, index) => (\n                    <option key={index} value={division}>{division}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                <Form.Label>Sub-Division</Form.Label>\n                <Form.Control \n                  as=\"select\" \n                  value={selectedSubdivision}\n                  onChange={(e) => setSelectedSubdivision(e.target.value)}\n                  disabled={loading || !selectedDivision || subdivisions.length === 0}\n                >\n                  <option value=\"\">Select Sub-Division</option>\n                  {subdivisions.map((subdivision, index) => (\n                    <option key={index} value={subdivision}>{subdivision}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <Row className=\"mb-4\">\n            <Col>\n              <Form.Group>\n                <Form.Label>Group</Form.Label>\n                <Form.Control \n                  as=\"select\" \n                  value={selectedGroup}\n                  onChange={(e) => setSelectedGroup(e.target.value)}\n                  disabled={loading || !selectedSubdivision || groups.length === 0}\n                >\n                  <option value=\"\">Select Group</option>\n                  {groups.map((group, index) => (\n                    <option key={index} value={group}>{group}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group>\n                <Form.Label>Family</Form.Label>\n                <Form.Control \n                  as=\"select\" \n                  value={selectedFamily}\n                  onChange={(e) => setSelectedFamily(e.target.value)}\n                  disabled={loading || !selectedGroup || families.length === 0}\n                >\n                  <option value=\"\">Select Family</option>\n                  {families.map((family, index) => (\n                    <option key={index} value={family}>{family}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          {occupations.length > 0 && (\n            <div className=\"mt-4\">\n              <h3>Occupations</h3>\n              <div className=\"table-responsive\">\n                <table className=\"table table-striped table-bordered\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th>Code</th>\n                      <th>Title</th>\n                      <th>NCO 2004 Code</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {occupations.map((occupation, index) => (\n                      <tr key={index}>\n                        <td>{occupation.Code}</td>\n                        <td>{occupation.Title}</td>\n                        <td>{occupation.NCO_2004_Code}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </Card.Body>\n        <Card.Footer className=\"text-center text-muted\">\n          Government Occupational Database © {new Date().getFullYear()}\n        </Card.Footer>\n      </Card>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}