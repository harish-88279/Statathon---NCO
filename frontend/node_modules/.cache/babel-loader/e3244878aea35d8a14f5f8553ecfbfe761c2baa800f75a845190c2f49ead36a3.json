{"ast":null,"code":"var _jsxFileName = \"D:\\\\Placement\\\\Projects\\\\Statathon\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Card, Alert, Form, InputGroup } from 'react-bootstrap';\nimport './App.css';\nimport Admin from './components/Admin';\nimport AdminDashboard from './components/AdminDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  label,\n  children,\n  isExpanded,\n  onToggle\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-content\",\n      onClick: onToggle,\n      children: [children && /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: `chevron ${isExpanded ? 'expanded' : ''}`,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M9 18l6-6-6-6\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tree-node-content\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), children && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-children ${isExpanded ? 'expanded' : ''}`,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = TreeNode;\nfunction App() {\n  _s();\n  const [hierarchyData, setHierarchyData] = useState({});\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const API_URL = 'http://localhost:5000/api';\n\n  // Import data on first load\n  useEffect(() => {\n    const importData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.post(`${API_URL}/import-data`);\n        setImportStatus({\n          type: 'success',\n          message: response.data.message\n        });\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          setImportStatus({\n            type: 'info',\n            message: 'Using existing database data'\n          });\n        } else {\n          setImportStatus({\n            type: 'danger',\n            message: 'Failed to import data'\n          });\n          console.error('Error importing data:', error);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    importData();\n  }, []);\n\n  // Load all data on component mount\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const occupationsResponse = await axios.get(`${API_URL}/occupations`);\n        const data = occupationsResponse.data;\n\n        // Organize data into hierarchy\n        const hierarchy = {};\n        data.forEach(item => {\n          if (!hierarchy[item.Division_Title]) {\n            hierarchy[item.Division_Title] = {};\n          }\n          if (!hierarchy[item.Division_Title][item.Sub_Division_Title]) {\n            hierarchy[item.Division_Title][item.Sub_Division_Title] = {};\n          }\n          if (!hierarchy[item.Division_Title][item.Sub_Division_Title][item.Group_Title]) {\n            hierarchy[item.Division_Title][item.Sub_Division_Title][item.Group_Title] = {};\n          }\n          if (!hierarchy[item.Division_Title][item.Sub_Division_Title][item.Group_Title][item.Family_Title]) {\n            hierarchy[item.Division_Title][item.Sub_Division_Title][item.Group_Title][item.Family_Title] = item.Occupations;\n          }\n        });\n        setHierarchyData(hierarchy);\n      } catch (error) {\n        setError('Failed to fetch data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n  const toggleNode = nodePath => {\n    setExpandedNodes(prev => {\n      const next = new Set(prev);\n      if (next.has(nodePath)) {\n        next.delete(nodePath);\n      } else {\n        next.add(nodePath);\n      }\n      return next;\n    });\n  };\n  const renderTree = (data, path = '') => {\n    if (Array.isArray(data)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"NCO 2004 Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Code 2015\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map((occupation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: occupation.NCO_2004_Code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: occupation.Code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: occupation.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    }\n    return Object.entries(data).map(([key, value]) => {\n      const currentPath = path ? `${path}-${key}` : key;\n      const isExpanded = expandedNodes.has(currentPath);\n      return /*#__PURE__*/_jsxDEV(TreeNode, {\n        label: key,\n        isExpanded: isExpanded,\n        onToggle: () => toggleNode(currentPath),\n        children: isExpanded && renderTree(value, currentPath)\n      }, currentPath, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const filterData = (data, term) => {\n    if (!term) return data;\n    const searchLower = term.toLowerCase();\n    const filtered = {};\n    Object.entries(data).forEach(([division, subdivisions]) => {\n      if (division.toLowerCase().includes(searchLower)) {\n        filtered[division] = subdivisions;\n        return;\n      }\n      const filteredSubdivisions = {};\n      Object.entries(subdivisions).forEach(([subdivision, groups]) => {\n        if (subdivision.toLowerCase().includes(searchLower)) {\n          filteredSubdivisions[subdivision] = groups;\n          return;\n        }\n        const filteredGroups = {};\n        Object.entries(groups).forEach(([group, families]) => {\n          if (group.toLowerCase().includes(searchLower)) {\n            filteredGroups[group] = families;\n            return;\n          }\n          const filteredFamilies = {};\n          Object.entries(families).forEach(([family, occupations]) => {\n            if (family.toLowerCase().includes(searchLower) || occupations.some(occ => occ.Title.toLowerCase().includes(searchLower) || occ.Code.toLowerCase().includes(searchLower) || occ.NCO_2004_Code.toLowerCase().includes(searchLower))) {\n              filteredFamilies[family] = occupations;\n            }\n          });\n          if (Object.keys(filteredFamilies).length > 0) {\n            filteredGroups[group] = filteredFamilies;\n          }\n        });\n        if (Object.keys(filteredGroups).length > 0) {\n          filteredSubdivisions[subdivision] = filteredGroups;\n        }\n      });\n      if (Object.keys(filteredSubdivisions).length > 0) {\n        filtered[division] = filteredSubdivisions;\n      }\n    });\n    return filtered;\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          className: \"py-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow-sm mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-dark text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-center mb-0\",\n                children: \"Government Occupational Database\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"bg-light\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  placeholder: \"Search occupations...\",\n                  value: searchTerm,\n                  onChange: e => setSearchTerm(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), importStatus && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: importStatus.type,\n                dismissible: true,\n                children: importStatus.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                dismissible: true,\n                onClose: () => setError(null),\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tree-view\",\n                children: renderTree(filterData(hierarchyData, searchTerm))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-center text-muted\",\n              children: [\"Government Occupational Database \\xA9 \", new Date().getFullYear()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O+SlIumndYVGIaPKanGQx9gCoYw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Routes","Route","Container","Card","Alert","Form","InputGroup","Admin","AdminDashboard","jsxDEV","_jsxDEV","TreeNode","label","children","isExpanded","onToggle","className","onClick","viewBox","fill","stroke","d","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","hierarchyData","setHierarchyData","expandedNodes","setExpandedNodes","Set","loading","setLoading","error","setError","importStatus","setImportStatus","searchTerm","setSearchTerm","API_URL","importData","response","post","type","message","data","status","console","fetchAllData","occupationsResponse","get","hierarchy","forEach","item","Division_Title","Sub_Division_Title","Group_Title","Family_Title","Occupations","toggleNode","nodePath","prev","next","has","delete","add","renderTree","path","Array","isArray","map","occupation","index","NCO_2004_Code","Code","Title","Object","entries","key","value","currentPath","filterData","term","searchLower","toLowerCase","filtered","division","subdivisions","includes","filteredSubdivisions","subdivision","groups","filteredGroups","group","families","filteredFamilies","family","occupations","some","occ","keys","length","element","fluid","Header","Body","Control","placeholder","onChange","e","target","variant","dismissible","onClose","Footer","Date","getFullYear","_c2","$RefreshReg$"],"sources":["D:/Placement/Projects/Statathon/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Card, Alert, Form, InputGroup } from 'react-bootstrap';\nimport './App.css';\nimport Admin from './components/Admin';\nimport AdminDashboard from './components/AdminDashboard';\n\nconst TreeNode = ({ label, children, isExpanded, onToggle }) => {\n  return (\n    <div className=\"tree-node\">\n      <div className=\"tree-content\" onClick={onToggle}>\n        {children && (\n          <svg\n            className={`chevron ${isExpanded ? 'expanded' : ''}`}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n          >\n            <path\n              d=\"M9 18l6-6-6-6\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        )}\n        <span className=\"tree-node-content\">{label}</span>\n      </div>\n      {children && (\n        <div className={`tree-children ${isExpanded ? 'expanded' : ''}`}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction App() {\n  const [hierarchyData, setHierarchyData] = useState({});\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const API_URL = 'http://localhost:5000/api';\n\n  // Import data on first load\n  useEffect(() => {\n    const importData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.post(`${API_URL}/import-data`);\n        setImportStatus({ type: 'success', message: response.data.message });\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          setImportStatus({ type: 'info', message: 'Using existing database data' });\n        } else {\n          setImportStatus({ type: 'danger', message: 'Failed to import data' });\n          console.error('Error importing data:', error);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    importData();\n  }, []);\n\n  // Load all data on component mount\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const occupationsResponse = await axios.get(`${API_URL}/occupations`);\n        const data = occupationsResponse.data;\n\n        // Organize data into hierarchy\n        const hierarchy = {};\n        data.forEach(item => {\n          if (!hierarchy[item.Division_Title]) {\n            hierarchy[item.Division_Title] = {};\n          }\n          if (!hierarchy[item.Division_Title][item.Sub_Division_Title]) {\n            hierarchy[item.Division_Title][item.Sub_Division_Title] = {};\n          }\n          if (!hierarchy[item.Division_Title][item.Sub_Division_Title][item.Group_Title]) {\n            hierarchy[item.Division_Title][item.Sub_Division_Title][item.Group_Title] = {};\n          }\n          if (!hierarchy[item.Division_Title][item.Sub_Division_Title][item.Group_Title][item.Family_Title]) {\n            hierarchy[item.Division_Title][item.Sub_Division_Title][item.Group_Title][item.Family_Title] = \n              item.Occupations;\n          }\n        });\n\n        setHierarchyData(hierarchy);\n      } catch (error) {\n        setError('Failed to fetch data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllData();\n  }, []);\n\n  const toggleNode = (nodePath) => {\n    setExpandedNodes(prev => {\n      const next = new Set(prev);\n      if (next.has(nodePath)) {\n        next.delete(nodePath);\n      } else {\n        next.add(nodePath);\n      }\n      return next;\n    });\n  };\n\n  const renderTree = (data, path = '') => {\n    if (Array.isArray(data)) {\n      return (\n        <div className=\"table-responsive mt-2\">\n          <table className=\"table table-striped table-bordered\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th>NCO 2004 Code</th>\n                <th>Code 2015</th>\n                <th>Job Title</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((occupation, index) => (\n                <tr key={index}>\n                  <td>{occupation.NCO_2004_Code}</td>\n                  <td>{occupation.Code}</td>\n                  <td>{occupation.Title}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n\n    return Object.entries(data).map(([key, value]) => {\n      const currentPath = path ? `${path}-${key}` : key;\n      const isExpanded = expandedNodes.has(currentPath);\n\n      return (\n        <TreeNode\n          key={currentPath}\n          label={key}\n          isExpanded={isExpanded}\n          onToggle={() => toggleNode(currentPath)}\n        >\n          {isExpanded && renderTree(value, currentPath)}\n        </TreeNode>\n      );\n    });\n  };\n\n  const filterData = (data, term) => {\n    if (!term) return data;\n    const searchLower = term.toLowerCase();\n    \n    const filtered = {};\n    Object.entries(data).forEach(([division, subdivisions]) => {\n      if (division.toLowerCase().includes(searchLower)) {\n        filtered[division] = subdivisions;\n        return;\n      }\n      \n      const filteredSubdivisions = {};\n      Object.entries(subdivisions).forEach(([subdivision, groups]) => {\n        if (subdivision.toLowerCase().includes(searchLower)) {\n          filteredSubdivisions[subdivision] = groups;\n          return;\n        }\n        \n        const filteredGroups = {};\n        Object.entries(groups).forEach(([group, families]) => {\n          if (group.toLowerCase().includes(searchLower)) {\n            filteredGroups[group] = families;\n            return;\n          }\n          \n          const filteredFamilies = {};\n          Object.entries(families).forEach(([family, occupations]) => {\n            if (family.toLowerCase().includes(searchLower) ||\n                occupations.some(occ => \n                  occ.Title.toLowerCase().includes(searchLower) ||\n                  occ.Code.toLowerCase().includes(searchLower) ||\n                  occ.NCO_2004_Code.toLowerCase().includes(searchLower)\n                )\n            ) {\n              filteredFamilies[family] = occupations;\n            }\n          });\n          \n          if (Object.keys(filteredFamilies).length > 0) {\n            filteredGroups[group] = filteredFamilies;\n          }\n        });\n        \n        if (Object.keys(filteredGroups).length > 0) {\n          filteredSubdivisions[subdivision] = filteredGroups;\n        }\n      });\n      \n      if (Object.keys(filteredSubdivisions).length > 0) {\n        filtered[division] = filteredSubdivisions;\n      }\n    });\n    \n    return filtered;\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n          <Container fluid className=\"py-4\">\n            <Card className=\"shadow-sm mb-4\">\n              <Card.Header className=\"bg-dark text-white\">\n                <h1 className=\"text-center mb-0\">Government Occupational Database</h1>\n              </Card.Header>\n              <Card.Body className=\"bg-light\">\n                <InputGroup className=\"mb-3\">\n                  <Form.Control\n                    placeholder=\"Search occupations...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                  />\n                </InputGroup>\n\n                {importStatus && (\n                  <Alert variant={importStatus.type} dismissible>\n                    {importStatus.message}\n                  </Alert>\n                )}\n                \n                {error && (\n                  <Alert variant=\"danger\" dismissible onClose={() => setError(null)}>\n                    {error}\n                  </Alert>\n                )}\n\n                {loading ? (\n                  <div className=\"text-center\">Loading...</div>\n                ) : (\n                  <div className=\"tree-view\">\n                    {renderTree(filterData(hierarchyData, searchTerm))}\n                  </div>\n                )}\n              </Card.Body>\n              <Card.Footer className=\"text-center text-muted\">\n                Government Occupational Database © {new Date().getFullYear()}\n              </Card.Footer>\n            </Card>\n          </Container>\n        } />\n        <Route path=\"/admin\" element={<Admin />} />\n        <Route path=\"/admin/dashboard\" element={<AdminDashboard />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}